module.exports = {
    handle: function (ctx, message) {
        ctx.dao.loadUserData(message.from.id, (err, user) => {
            if (!err) {
                if (user.session != null) {
                    switch (message.text) {
                        case 'üìú –°–ø–∏—Å–æ–∫':
                            ctx.hostSvc.msaApi('/msa/list.json', message.from);
                            break;
                    }
                } else {
                    user.session = 'msa';
                    sendMessage(ctx, message.from, '–í—ã–±–∏—Ä–∏—Ç–µ –æ–¥–∏–Ω—É –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö —Ç–µ–º');
                }
                ctx.dao.saveUserData(user);
            }
        });
    },

    handleCallback: function (ctx, message) {
        sendMessage(ctx, message.from, '–ö–æ–º–º–∞–Ω–¥–∞ –ø–æ–∫–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è');
    }
};

function sendMessage(ctx, to, response) {
    ctx.bot.sendMessage(to, response,
        {
            parse_mode: 'HTML',
            reply_markup: {
                keyboard: [
                    ['üìú –°–ø–∏—Å–æ–∫'],
                    ['‚¨ÖÔ∏è –û—Ç–º–µ–Ω–∞']
                ],
                resize_keyboard: true
            }
        });
}
